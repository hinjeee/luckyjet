<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>Lucky Jet Graph Demo</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #0c0f1a;
      color: white;
      text-align: center;
      margin: 0;
      padding: 0;
    }
    h1 {
      margin: 20px;
      color: #ffcc00;
    }
    #balance {
      font-size: 22px;
      margin: 10px;
      color: #00ff99;
    }
    #game {
      margin: 20px auto;
      width: 600px;
      height: 400px;
      border: 2px solid #444;
      border-radius: 10px;
      background: linear-gradient(to top, #111, #222);
      position: relative;
      overflow: hidden;
    }
    #graph {
      width: 100%;
      height: 100%;
    }
    #jet {
      width: 40px;
      height: 40px;
      background: url("https://upload.wikimedia.org/wikipedia/commons/3/3e/Airplane_silhouette.png") no-repeat center;
      background-size: contain;
      position: absolute;
      bottom: 0;
      left: 50px;
      transition: bottom 0.2s linear, left 0.2s linear;
    }
    #coefficient {
      font-size: 28px;
      margin: 20px 0;
    }
    #controls input, #controls button {
      padding: 10px;
      margin: 5px;
      border: none;
      border-radius: 6px;
      font-weight: bold;
    }
    #controls input {
      width: 100px;
      text-align: center;
    }
    #controls button {
      background: #ffcc00;
      color: black;
      cursor: pointer;
    }
    #message {
      font-size: 20px;
      margin-top: 15px;
      color: #00ffcc;
    }
    #history {
      margin: 20px auto;
      padding: 10px;
      border: 1px solid #444;
      border-radius: 6px;
      background: #111;
      max-width: 600px;
    }
    #history span {
      margin: 0 5px;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <h1>Lucky Jet Demo üöÄüìà</h1>
  <div id="balance">–ë–∞–ª–∞–Ω—Å: 1000</div>
  
  <div id="game">
    <canvas id="graph"></canvas>
    <div id="jet"></div>
  </div>

  <div id="coefficient">–ö–æ—ç—Ñ: 1.00x</div>

  <div id="controls">
    <input type="number" id="bet" value="100" min="1">
    <button onclick="startGame()">–°—Ç–∞—Ä—Ç</button>
    <button onclick="cashOut()">–ó–∞–±—Ä–∞—Ç—å</button>
  </div>

  <div id="message"></div>

  <div id="history">
    <strong>–ò—Å—Ç–æ—Ä–∏—è:</strong> <div id="historyList"></div>
  </div>

  <script>
    let coeffEl = document.getElementById("coefficient");
    let messageEl = document.getElementById("message");
    let balanceEl = document.getElementById("balance");
    let historyList = document.getElementById("historyList");
    let canvas = document.getElementById("graph");
    let ctx = canvas.getContext("2d");
    let jet = document.getElementById("jet");

    canvas.width = 600;
    canvas.height = 400;

    let coeff = 1.00;
    let interval, crashPoint;
    let isPlaying = false;
    let isCashedOut = false;
    let balance = 1000;
    let bet = 0;
    let time = 0;
    let points = [];

    function startGame() {
      if (isPlaying) return;

      bet = parseInt(document.getElementById("bet").value);
      if (isNaN(bet) || bet <= 0 || bet > balance) {
        messageEl.textContent = "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–∞–≤–∫–∞!";
        return;
      }

      balance -= bet;
      updateBalance();

      coeff = 1.00;
      time = 0;
      points = [];
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      coeffEl.textContent = "–ö–æ—ç—Ñ: 1.00x";
      messageEl.textContent = "";
      isPlaying = true;
      isCashedOut = false;

      crashPoint = (Math.random() * 5 + 1).toFixed(2);

      interval = setInterval(() => {
        time += 0.1;
        coeff += 0.05;
        points.push({x: time * 60, y: canvas.height - coeff * 20});

        drawGraph();
        coeffEl.textContent = "–ö–æ—ç—Ñ: " + coeff.toFixed(2) + "x";

        // –î–≤–∏–≥–∞–µ–º —Å–∞–º–æ–ª—ë—Ç
        let lastPoint = points[points.length - 1];
        if (lastPoint) {
          jet.style.left = (50 + lastPoint.x) + "px";
          jet.style.bottom = (coeff * 20) + "px";
        }

        if (coeff >= crashPoint) {
          endGame(false);
        }
      }, 200);
    }

    function cashOut() {
      if (isPlaying && !isCashedOut) {
        isCashedOut = true;
        let win = Math.floor(bet * coeff);
        balance += win;
        updateBalance();
        endGame(true, win);
      }
    }

    function endGame(won, winAmount = 0) {
      clearInterval(interval);
      isPlaying = false;

      if (won) {
        messageEl.textContent = "‚úÖ –ó–∞–±—Ä–∞–ª: " + winAmount + " (x" + coeff.toFixed(2) + ")";
      } else {
        messageEl.textContent = "üí• –°–∞–º–æ–ª—ë—Ç —É–ª–µ—Ç–µ–ª –Ω–∞ " + coeff.toFixed(2) + "x. –°—Ç–∞–≤–∫–∞ —Å–≥–æ—Ä–µ–ª–∞!";
      }

      addToHistory(coeff.toFixed(2));
    }

    function updateBalance() {
      balanceEl.textContent = "–ë–∞–ª–∞–Ω—Å: " + balance;
    }

    function addToHistory(value) {
      let span = document.createElement("span");
      span.textContent = value + "x";
      span.style.color = value >= 2 ? "#00ff99" : "#ff5555";
      historyList.prepend(span);
      if (historyList.childNodes.length > 15) {
        historyList.removeChild(historyList.lastChild);
      }
    }

    function drawGraph() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.beginPath();
      ctx.moveTo(0, canvas.height);
      points.forEach(p => ctx.lineTo(p.x, p.y));
      ctx.strokeStyle = "#00ffcc";
      ctx.lineWidth = 2;
      ctx.stroke();
    }
  </script>
</body>
</html>
